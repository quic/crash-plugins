# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on ubuntu arm64 platforms

on:
  push:
    # branches: [ "main" ]
    tags:
     - 'v*'

env:
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: ubuntu-22.04-arm

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: get_tag
      run: echo "tag=$(git tag)" >> $GITHUB_ENV

    - name: Install packages
      run: |
           sudo apt-get update
           sudo apt-get install -y gcc g++ cmake liblzo2-dev liblz4-dev libelf-dev libzstd-dev pkg-config

    - name: Build
      run: |
        cmake -DCMAKE_C_COMPILER="gcc" \
        -DCMAKE_CXX_COMPILER="g++" \
        -DCMAKE_BUILD_TYPE="Debug" \
        -DCMAKE_BUILD_TARGET_ARCH="arm64" \
        -DBUILD_TARGET_TOGETHER="1" \
        -B output/arm64 \
        CMakeLists.txt
        make -C output/arm64 -j$(sysctl -n hw.logicalcpu)
        tar -czvf crash-plugins_${{ env.tag }}_arm.tar.gz output/arm64/plugins.so

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: crash-plugins_${{ env.tag }}_arm.tar.gz
        path: crash-plugins_${{ env.tag }}_arm.tar.gz

  release:
     needs: build
     runs-on: ubuntu-22.04-arm

     steps:
      - name: checkout branch
        uses: actions/checkout@v4

      - name: get_tag
        run: echo "plugin_tag=$(git tag)" >> $GITHUB_ENV

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
            name: crash-plugins_${{ env.plugin_tag }}_arm.tar.gz

      - name: Release the Crash-plugins
        id: release-crash
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            tag_name: ${{ env.plugin_tag }}
            release_name: crash-plugins-${{ env.plugin_tag }}
            files: |
              crash-plugins_${{ env.plugin_tag }}_arm.tar.gz

      - name: Upload Release Asset
        id: upload
        uses: actions/upload-release-asset@latest
        env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
              upload_url: ${{ steps.release-crash.outputs.upload_url }}
              asset_path: crash-plugins_${{ env.plugin_tag }}_arm.tar.gz
              asset_name: crash-plugins_${{ env.plugin_tag }}_arm.tar.gz
              asset_content_type: application/gzip #zip